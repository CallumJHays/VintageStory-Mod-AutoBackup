name: Build AutoBackup Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'

    - name: Setup Build Dependencies
      run: |
        $ErrorActionPreference = "Stop"
        $vs_version = $(Get-Content .\AutoBackup\modinfo.json | jq -r '.dependencies.game')
        $filename = "vs_server_linux-x64_${vs_version}.tar.gz"
        $folder = if ($vs_version -like "*-rc*") { "unstable" } else { "stable" }
        $uri = "https://cdn.vintagestory.at/gamefiles/${folder}/${filename}"
        Invoke-WebRequest -Uri $uri -Out $filename
        $vsdir = $(mkdir VintageStory)
        Set-Location VintageStory
        tar -zxvf "..\$filename" Lib/ Mods/ VintagestoryAPI.dll
        Add-Content -Path $Env:GITHUB_ENV -Value "VINTAGE_STORY=${vsdir}"

    - name: Build and Package Mod
      run: .\build.ps1

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mod-files
        path: Releases/*
        if-no-files-found: error

  release:
    needs: build
    runs-on: windows-latest

    # Only run on push to master branch or PRs from original repo (not forks)
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event.pull_request.head.repo.full_name == github.repository
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set Release Tag
      run: |
        $ErrorActionPreference = "Stop"
        $mod_version = $(Get-Content .\AutoBackup\modinfo.json | jq -r .version)
        if ("${{ github.ref }}" -ne "refs/heads/master") {
          $datetime = Get-Date -Format "yyyyMMddHHmmss"
          $RELEASE_TAG = "v${mod_version}-dev.$datetime"
        } else {
          $RELEASE_TAG = "v${mod_version}"
        }
        Add-Content -Path $Env:GITHUB_ENV -Value "RELEASE_TAG=$RELEASE_TAG"
    
    - name: Commit Release Tag
      run: |
        $ErrorActionPreference = "Stop"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git fetch --tags
        git tag $env:RELEASE_TAG
        git push origin $env:RELEASE_TAG
      
    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod-files
        path: Releases

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: 
        name: AutoBackup ${{ env.RELEASE_TAG }}
        files: Releases/*
        prerelease: ${{ github.event_name == 'pull_request' }}
        generate_release_notes: true